// <auto-generated />
using MVCProject.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCProject.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230920001316_addImageToProduct")]
    partial class addImageToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Audio"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Cameras"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Mobile Phones"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Apple",
                            CategoryId = 8,
                            Description = "The latest iPhone with powerful features.",
                            ImageUrl = "",
                            InStockQuantity = 10,
                            ModelNumber = "12",
                            Price = 900.0,
                            Title = "iPhone 12"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            CategoryId = 8,
                            Description = "A flagship smartphone from Samsung.",
                            ImageUrl = "",
                            InStockQuantity = 15,
                            ModelNumber = "S21",
                            Price = 850.0,
                            Title = "Samsung Galaxy S21"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Bose",
                            CategoryId = 1,
                            Description = "Noise-canceling wireless headphones.",
                            ImageUrl = "",
                            InStockQuantity = 8,
                            ModelNumber = "QC35 II",
                            Price = 350.0,
                            Title = "Bose QuietComfort 35 II"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Canon",
                            CategoryId = 2,
                            Description = "A DSLR camera with advanced features.",
                            ImageUrl = "",
                            InStockQuantity = 12,
                            ModelNumber = "EOS 80D",
                            Price = 1000.0,
                            Title = "Canon EOS 80D"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Dell",
                            CategoryId = 3,
                            Description = "A high-performance laptop from Dell.",
                            ImageUrl = "",
                            InStockQuantity = 5,
                            ModelNumber = "XPS 13",
                            Price = 1300.0,
                            Title = "Dell XPS 13"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Lenovo",
                            CategoryId = 3,
                            Description = "A business-class ultrabook from Lenovo.",
                            ImageUrl = "",
                            InStockQuantity = 3,
                            ModelNumber = "ThinkPad X1 Carbon",
                            Price = 1600.0,
                            Title = "Lenovo ThinkPad X1 Carbon"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Sony",
                            CategoryId = 1,
                            Description = "Wireless noise-canceling headphones.",
                            ImageUrl = "",
                            InStockQuantity = 20,
                            ModelNumber = "WH-1000XM4",
                            Price = 350.0,
                            Title = "Sony WH-1000XM4"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Google",
                            CategoryId = 8,
                            Description = "A flagship smartphone from Google.",
                            ImageUrl = "",
                            InStockQuantity = 18,
                            ModelNumber = "Pixel 6",
                            Price = 700.0,
                            Title = "Google Pixel 6"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Product", b =>
                {
                    b.HasOne("MVCProject.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
